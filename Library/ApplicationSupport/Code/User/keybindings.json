[
  // ===================================
  // Switch focus
  // ===================================
  {
    "key": "ctrl+h",
    "command": "workbench.action.focusSideBar",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.terminal.focus",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.focusFirstEditorGroup",
    "when": "filesExplorerFocus"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.focusFirstEditorGroup",
    "when": "terminalFocus"
  },

  // ===================================
  // Command Center
  // ===================================
  // -- Moving on the command palette
  {
    "key": "ctrl+j",
    "command": "workbench.action.quickOpenSelectNext",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.quickOpenSelectPrevious",
    "when": "inQuickOpen"
  },

  // ===================================
  // Sidebars
  // ===================================
  {
    "key": "enter",
    "command": "-renameFile",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  }, // Open file / Toggle folder
  {
    "key": "n",
    "command": "explorer.newFile",
    "when": "explorerViewletFocus && explorerViewletVisible && !inputFocus"
  }, // Create new files
  {
    "key": "f",
    "command": "explorer.newFolder",
    "when": "explorerViewletFocus && explorerViewletVisible"
  }, // Create new folders
  {
    "key": "r",
    "command": "renameFile",
    "when": "explorerViewletFocus && explorerViewletVisible && !inputFocus"
  }, // Rename
  {
    "key": "d",
    "command": "deleteFile",
    "when": "explorerViewletFocus && explorerViewletVisible && !inputFocus"
  }, // Delete
  {
    "key": "y",
    "command": "filesExplorer.copy",
    "when": "explorerViewletFocus && explorerViewletVisible && !inputFocus"
  }, // Copy
  {
    "key": "p",
    "command": "filesExplorer.paste",
    "when": "explorerViewletFocus && explorerViewletVisible && !inputFocus"
  }, // Paste

  // ===================================
  // Editor
  // ===================================
  // -- Moving on the autocomplete list
  {
    "key": "ctrl+j",
    "command": "selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+k",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },

  // -- Tab switching
  {
    "key": "shift+h",
    "command": "workbench.action.previousEditor",
    "when": "editorTextFocus && vim.mode == 'Normal'"
  },
  {
    "key": "shift+l",
    "command": "workbench.action.nextEditor",
    "when": "editorTextFocus && vim.mode == 'Normal'"
  },

  // -- Search/replace
  {
    "key": "ctrl+/ f",
    "command": "actions.find",
    "when": "editorFocus || editorIsOpen"
  },
  {
    "key": "cmd+f",
    "command": "-actions.find",
    "when": "editorFocus || editorIsOpen"
  }, // Macでの標準的な検索ショートカットを無効化
  {
    "key": "ctrl+/ h",
    "command": "editor.action.startFindReplaceAction",
    "when": "editorFocus || editorIsOpen"
  },
  {
    "key": "alt+cmd+f",
    "command": "-editor.action.startFindReplaceAction",
    "when": "editorFocus || editorIsOpen"
  }, // Macでの標準的な置換ショートカットを無効化

  // ===================================
  // Terminal
  // ===================================
  {
    "key": "shift+cmd+j",
    "command": "workbench.action.toggleMaximizedPanel"
  },

  // ===================================
  // Git source control
  // ===================================
  {
    "key": "cmd+g n",
    "command": "git.branchFrom"
  },
  {
    "key": "cmd+g space",
    "command": "git.stage"
  },
  {
    "key": "cmd+g shift+space",
    "command": "git.unstage"
  },
  {
    "key": "cmd+g c",
    "command": "git.commit"
  },

  // ===================================
  // Git Graph
  // ===================================
  {
    "key": "cmd+shift+g cmd+shift+g",
    "command": "git-graph.view"
  },
  {
    "key": "cmd+shift+g cmd+shift+f",
    "command": "git-graph.fetch"
  }
]
